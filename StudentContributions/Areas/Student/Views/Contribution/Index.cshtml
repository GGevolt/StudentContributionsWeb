@model IEnumerable<StudentContributions.Models.Models.Contribution>
@{
    ViewData["Title"] = "My Articles";
    DateTime? timestamp1 = ViewBag.Timestamp1;
    DateTime? timestamp2 = ViewBag.Timestamp2;
    bool canEdit = DateTime.Now <= timestamp2; // Allow edits until the semester closure date
    bool canCreate = DateTime.Now <= timestamp1; // Allow creation until the magazine closure date
}

<head>
    <title>My Article</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <link href="https://fonts.googleapis.com/css?family=Roboto:400,100,300,700" rel="stylesheet">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/5.3.0/css/bootstrap.min.css">

    <link rel="stylesheet" href="~css/style.css">

</head>
@if (canCreate)
{
    <a class="nav-link text-dark" asp-area="Student" asp-controller="Contribution" asp-action="Create">New Article</a>
}

<body>
    <section class="container mt-5">
        <div class="row">
            <div class="col-md-12 text-center mb-4">
                <h2 class="fw-bold">My Articles</h2>
            </div>
        </div>

        <div class="row">
            <div class="col">
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead class="table-header">
                            <tr>
                                <th scope="col">Title</th>
                                <th scope="col">Status</th>
                                <th scope="col">Comment</th>
                                <th scope="col">Magazine ID</th>
                                <th scope="col">Submission Date</th>
                                <th scope="col">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => item.Title)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Contribution_Status)</td>
                                    <td>
                                        @if (item.Comment != null && item.Comment.Any())
                                        {
                                            @item.Comment
                                            ;
                                        }
                                        else
                                        {
                                            <p>No comment</p>
                                        }
                                    </td>
                                    <td>@Html.DisplayFor(modelItem => item.MagazineID)</td>
                                    <td>@Html.DisplayFor(modelItem => item.SubmissionDate)</td>
                                    <td>
                                        <a class="btn btn-primary" href="~/Student/Contribution/Details/@item.ID">Details</a>
                                        @if (canEdit)
                                        {
                                            <a class="btn btn-warning" href="~/Student/Contribution/Edit/@item.ID">Edit</a>
                                            <a class="btn btn-danger" href="~/Student/Contribution/Delete/@item.ID">Delete</a>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </section>
    <script>
        window.onload = function () {
            var p = document.getElementById('myText');
            var text = p.innerText;
            var maxLength = 30; // Đặt giới hạn kí tự tại đây
            var newText = '';
            var lines = text.split('\n');
            for (var i = 0; i < lines.length; i++) {
                var line = lines[i];
                while (line.length > maxLength) {
                    newText += line.substring(0, maxLength) + '\n';
                    line = line.substring(maxLength);
                }
                newText += line + '\n';
            }
            p.innerText = newText;
        }
    </script>
    <script src="js/jquery.min.js"></script>
    <script src="js/popper.js"></script>
    <script src="js/bootstrap.min.js"></script>
    <script src="js/main.js"></script>

</body>
</html>
